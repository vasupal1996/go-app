// Code generated by MockGen. DO NOT EDIT.
// Source: go-app/app (interfaces: Example)

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	app "go-app/app"
	reflect "reflect"
)

// MockExample is a mock of Example interface
type MockExample struct {
	ctrl     *gomock.Controller
	recorder *MockExampleMockRecorder
}

// MockExampleMockRecorder is the mock recorder for MockExample
type MockExampleMockRecorder struct {
	mock *MockExample
}

// NewMockExample creates a new mock instance
func NewMockExample(ctrl *gomock.Controller) *MockExample {
	mock := &MockExample{ctrl: ctrl}
	mock.recorder = &MockExampleMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockExample) EXPECT() *MockExampleMockRecorder {
	return m.recorder
}

// SaveHello mocks base method
func (m *MockExample) SaveHello(arg0 *app.SaveHelloOpts) (*app.SaveHelloResp, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveHello", arg0)
	ret0, _ := ret[0].(*app.SaveHelloResp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SaveHello indicates an expected call of SaveHello
func (mr *MockExampleMockRecorder) SaveHello(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveHello", reflect.TypeOf((*MockExample)(nil).SaveHello), arg0)
}

// SayHello mocks base method
func (m *MockExample) SayHello(arg0 bool) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SayHello", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SayHello indicates an expected call of SayHello
func (mr *MockExampleMockRecorder) SayHello(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SayHello", reflect.TypeOf((*MockExample)(nil).SayHello), arg0)
}
